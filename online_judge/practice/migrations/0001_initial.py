# Generated by Django 2.1.4 on 2019-02-19 06:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('question', models.TextField(blank=True, null=True)),
                ('constraint', models.TextField(blank=True, null=True)),
                ('inputformat', models.TextField(blank=True, null=True)),
                ('outputformat', models.TextField(blank=True, null=True)),
                ('sampleinput', models.TextField(blank=True, null=True)),
                ('sampleoutput', models.TextField(blank=True, null=True)),
                ('explanation', models.TextField(blank=True, null=True)),
                ('total_inputfiles', models.IntegerField(null=True)),
                ('totalscore', models.IntegerField(default=0)),
                ('accuracy', models.FloatField(blank=True, default=None, null=True)),
                ('difficulty', models.CharField(max_length=30)),
                ('successful_submission', models.IntegerField(default=0)),
                ('isdeleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Problem_files',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
                ('score', models.IntegerField(blank=True, null=True)),
                ('errortype', models.CharField(max_length=1000, null=True)),
                ('runtime', models.CharField(max_length=20, null=True)),
                ('memoryused', models.CharField(max_length=50, null=True)),
                ('filepath', models.TextField()),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problemfiles_problem', to='practice.Problem')),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('totalscore', models.IntegerField(default=0)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('verdict', models.CharField(max_length=50, null=True)),
                ('isrunning', models.CharField(max_length=20)),
                ('comment', models.TextField(blank=True, null=True)),
                ('commentunread', models.BooleanField(blank=True, default=True, null=True)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submission_problem', to='practice.Problem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Submission_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Submission_files',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=20)),
                ('score', models.IntegerField(default=0)),
                ('errortype', models.CharField(max_length=1000, null=True)),
                ('runtime', models.CharField(max_length=20, null=True)),
                ('memoryused', models.CharField(max_length=50, null=True)),
                ('filepath', models.TextField()),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissionfiles_submission', to='practice.Submission')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('problems', models.ManyToManyField(to='practice.Problem')),
            ],
        ),
    ]
